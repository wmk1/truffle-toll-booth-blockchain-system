{
  "contractName": "MultiplierHolderI",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "vehicleType",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "LogMultiplierSet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "vehicleType",
          "type": "uint256"
        },
        {
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "name": "setMultiplier",
      "outputs": [
        {
          "name": "success",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "vehicleType",
          "type": "uint256"
        }
      ],
      "name": "getMultiplier",
      "outputs": [
        {
          "name": "multiplier",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\n\ncontract MultiplierHolderI {\n\n    /**\n     * Event emitted when a new multiplier has been set.\n     * @param sender The account that ran the action.\n     * @param vehicleType The type of vehicle for which the multiplier was set.\n     * @param multiplier The actual multiplier set.\n     */\n    event LogMultiplierSet(\n        address indexed sender,\n        uint indexed vehicleType,\n        uint multiplier);\n\n    /**\n     * Called by the owner of the MultiplierHolder.\n     *     Can be used to update a value.\n     *     It should roll back if the caller is not the owner of the contract.\n     *     It should roll back if the vehicle type is 0.\n     *     Setting the multiplier to 0 is equivalent to removing it and is an acceptable action.\n     *     It should roll back if the same multiplier is already set to the vehicle type.\n     * @param vehicleType The type of the vehicle being set.\n     * @param multiplier The multiplier to use.\n     * @return Whether the action was successful.\n     * Emits LogMultiplierSet with:\n     *     The sender of the action.\n     *     The vehicle type that was modified.\n     *     The new multiplier that was set.\n     */\n    function setMultiplier(\n            uint vehicleType,\n            uint multiplier)\n        public\n        returns(bool success);\n\n    /**\n     * @param vehicleType The type of vehicle whose multiplier we want\n     *     It should accept a vehicle type equal to 0.\n     * @return The multiplier for this vehicle type.\n     *     A 0 value indicates a non-existent multiplier.\n     */\n    function getMultiplier(uint vehicleType)\n        view\n        public\n        returns(uint multiplier);\n\n    /*\n     * You need to create:\n     *\n     * - a contract named `MultiplierHolder` that:\n     *     - is `OwnedI` and `MultiplierHolderI`.\n     *     - has a constructor that takes no parameter.\n     */        \n}",
  "sourcePath": "/Users/wojciechkalinski/workspace-oracle-exam2/wojkal-code/contracts/interfaces/MultiplierHolderI.sol",
  "ast": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/wojkal-code/contracts/interfaces/MultiplierHolderI.sol",
    "exportedSymbols": {
      "MultiplierHolderI": [
        1787
      ]
    },
    "id": 1788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1762,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1787,
        "linearizedBaseContracts": [
          1787
        ],
        "name": "MultiplierHolderI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new multiplier has been set.\n@param sender The account that ran the action.\n@param vehicleType The type of vehicle for which the multiplier was set.\n@param multiplier The actual multiplier set.",
            "id": 1770,
            "name": "LogMultiplierSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1764,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "351:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1766,
                  "indexed": true,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "383:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1765,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1768,
                  "indexed": false,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "417:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:92:12"
            },
            "src": "319:115:12"
          },
          {
            "body": null,
            "documentation": "Called by the owner of the MultiplierHolder.\n    Can be used to update a value.\n    It should roll back if the caller is not the owner of the contract.\n    It should roll back if the vehicle type is 0.\n    Setting the multiplier to 0 is equivalent to removing it and is an acceptable action.\n    It should roll back if the same multiplier is already set to the vehicle type.\n@param vehicleType The type of the vehicle being set.\n@param multiplier The multiplier to use.\n@return Whether the action was successful.\nEmits LogMultiplierSet with:\n    The sender of the action.\n    The vehicle type that was modified.\n    The new multiplier that was set.",
            "id": 1779,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1232:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1774,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1262:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1218:60:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1310:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1309:14:12"
            },
            "scope": 1787,
            "src": "1196:128:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@param vehicleType The type of vehicle whose multiplier we want\n    It should accept a vehicle type equal to 0.\n@return The multiplier for this vehicle type.\n    A 0 value indicates a non-existent multiplier.",
            "id": 1786,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "1606:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:18:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "1668:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:17:12"
            },
            "scope": 1787,
            "src": "1583:102:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1788,
        "src": "26:1876:12"
      }
    ],
    "src": "0:1902:12"
  },
  "legacyAST": {
    "absolutePath": "/Users/wojciechkalinski/workspace-oracle-exam2/wojkal-code/contracts/interfaces/MultiplierHolderI.sol",
    "exportedSymbols": {
      "MultiplierHolderI": [
        1787
      ]
    },
    "id": 1788,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1762,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:12"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1787,
        "linearizedBaseContracts": [
          1787
        ],
        "name": "MultiplierHolderI",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "Event emitted when a new multiplier has been set.\n@param sender The account that ran the action.\n@param vehicleType The type of vehicle for which the multiplier was set.\n@param multiplier The actual multiplier set.",
            "id": 1770,
            "name": "LogMultiplierSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1769,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1764,
                  "indexed": true,
                  "name": "sender",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "351:22:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1763,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1766,
                  "indexed": true,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "383:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1765,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "383:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1768,
                  "indexed": false,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1770,
                  "src": "417:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1767,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "417:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "341:92:12"
            },
            "src": "319:115:12"
          },
          {
            "body": null,
            "documentation": "Called by the owner of the MultiplierHolder.\n    Can be used to update a value.\n    It should roll back if the caller is not the owner of the contract.\n    It should roll back if the vehicle type is 0.\n    Setting the multiplier to 0 is equivalent to removing it and is an acceptable action.\n    It should roll back if the same multiplier is already set to the vehicle type.\n@param vehicleType The type of the vehicle being set.\n@param multiplier The multiplier to use.\n@return Whether the action was successful.\nEmits LogMultiplierSet with:\n    The sender of the action.\n    The vehicle type that was modified.\n    The new multiplier that was set.",
            "id": 1779,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "setMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1775,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1772,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1232:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1771,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1232:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1774,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1262:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1773,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1262:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1218:60:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1777,
                  "name": "success",
                  "nodeType": "VariableDeclaration",
                  "scope": 1779,
                  "src": "1310:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1776,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1310:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1309:14:12"
            },
            "scope": 1787,
            "src": "1196:128:12",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": "@param vehicleType The type of vehicle whose multiplier we want\n    It should accept a vehicle type equal to 0.\n@return The multiplier for this vehicle type.\n    A 0 value indicates a non-existent multiplier.",
            "id": 1786,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1782,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1781,
                  "name": "vehicleType",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "1606:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1780,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1606:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1605:18:12"
            },
            "payable": false,
            "returnParameters": {
              "id": 1785,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1784,
                  "name": "multiplier",
                  "nodeType": "VariableDeclaration",
                  "scope": 1786,
                  "src": "1668:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1783,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1668:4:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1667:17:12"
            },
            "scope": 1787,
            "src": "1583:102:12",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1788,
        "src": "26:1876:12"
      }
    ],
    "src": "0:1902:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.25+commit.59dbf8f1.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.0",
  "updatedAt": "2019-04-27T11:33:47.712Z",
  "devdoc": {
    "methods": {
      "getMultiplier(uint256)": {
        "params": {
          "vehicleType": "The type of vehicle whose multiplier we want    It should accept a vehicle type equal to 0."
        },
        "return": "The multiplier for this vehicle type.    A 0 value indicates a non-existent multiplier."
      },
      "setMultiplier(uint256,uint256)": {
        "params": {
          "multiplier": "The multiplier to use.",
          "vehicleType": "The type of the vehicle being set."
        },
        "return": "Whether the action was successful. Emits LogMultiplierSet with:    The sender of the action.    The vehicle type that was modified.    The new multiplier that was set."
      }
    }
  },
  "userdoc": {
    "methods": {
      "setMultiplier(uint256,uint256)": {
        "notice": "Called by the owner of the MultiplierHolder.    Can be used to update a value.    It should roll back if the caller is not the owner of the contract.    It should roll back if the vehicle type is 0.    Setting the multiplier to 0 is equivalent to removing it and is an acceptable action.    It should roll back if the same multiplier is already set to the vehicle type."
      }
    }
  }
}